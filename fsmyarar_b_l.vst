entity fsmyarar_b_l is
   port (
      clk     : in      bit;
      vdd     : in      bit;
      vss     : in      bit;
      code    : in      bit_vector(3 downto 0);
      daytime : in      bit;
      reset   : in      bit;
      door    : out     bit;
      alarm   : out     bit
 );
end fsmyarar_b_l;

architecture structural of fsmyarar_b_l is
Component inv_x4
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x8
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component an12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a4_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nao22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component noa22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component xr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2ao222_x4
   port (
      i0  : in      bit;
      i1  : in      bit;
      i3  : in      bit;
      i2  : in      bit;
      i4  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component ao22_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal dac_cs        : bit_vector( 2 downto 0);
signal not_code      : bit_vector( 3 downto 1);
signal not_dac_cs    : bit_vector( 2 downto 0);
signal xr2_x1_sig    : bit;
signal on12_x1_sig   : bit;
signal on12_x1_4_sig : bit;
signal on12_x1_3_sig : bit;
signal on12_x1_2_sig : bit;
signal o2_x2_sig     : bit;
signal not_daytime   : bit;
signal not_aux5      : bit;
signal not_aux11     : bit;
signal noa22_x1_sig  : bit;
signal no4_x1_sig    : bit;
signal no3_x1_sig    : bit;
signal no3_x1_3_sig  : bit;
signal no3_x1_2_sig  : bit;
signal no2_x1_sig    : bit;
signal no2_x1_2_sig  : bit;
signal nao22_x1_sig  : bit;
signal na4_x1_sig    : bit;
signal na4_x1_2_sig  : bit;
signal na3_x1_sig    : bit;
signal na3_x1_3_sig  : bit;
signal na3_x1_2_sig  : bit;
signal na2_x1_sig    : bit;
signal na2_x1_8_sig  : bit;
signal na2_x1_7_sig  : bit;
signal na2_x1_6_sig  : bit;
signal na2_x1_5_sig  : bit;
signal na2_x1_4_sig  : bit;
signal na2_x1_3_sig  : bit;
signal na2_x1_2_sig  : bit;
signal inv_x2_sig    : bit;
signal aux9          : bit;
signal aux6          : bit;
signal aux5          : bit;
signal aux11         : bit;
signal aux10         : bit;
signal aux0          : bit;
signal ao22_x2_sig   : bit;
signal a3_x2_sig     : bit;
signal a2_x2_sig     : bit;
signal a2_x2_2_sig   : bit;

begin

not_aux11_ins : inv_x2
   port map (
      i   => aux11,
      nq  => not_aux11,
      vdd => vdd,
      vss => vss
   );

not_aux5_ins : inv_x2
   port map (
      i   => aux5,
      nq  => not_aux5,
      vdd => vdd,
      vss => vss
   );

not_dac_cs_2_ins : inv_x2
   port map (
      i   => dac_cs(2),
      nq  => not_dac_cs(2),
      vdd => vdd,
      vss => vss
   );

not_dac_cs_1_ins : inv_x4
   port map (
      i   => dac_cs(1),
      nq  => not_dac_cs(1),
      vdd => vdd,
      vss => vss
   );

not_dac_cs_0_ins : inv_x2
   port map (
      i   => dac_cs(0),
      nq  => not_dac_cs(0),
      vdd => vdd,
      vss => vss
   );

not_code_3_ins : inv_x8
   port map (
      i   => code(3),
      nq  => not_code(3),
      vdd => vdd,
      vss => vss
   );

not_code_2_ins : inv_x2
   port map (
      i   => code(2),
      nq  => not_code(2),
      vdd => vdd,
      vss => vss
   );

not_code_1_ins : inv_x2
   port map (
      i   => code(1),
      nq  => not_code(1),
      vdd => vdd,
      vss => vss
   );

not_daytime_ins : inv_x2
   port map (
      i   => daytime,
      nq  => not_daytime,
      vdd => vdd,
      vss => vss
   );

aux11_ins : no2_x1
   port map (
      i0  => code(0),
      i1  => reset,
      nq  => aux11,
      vdd => vdd,
      vss => vss
   );

aux10_ins : an12_x1
   port map (
      i0  => reset,
      i1  => code(0),
      q   => aux10,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => code(1),
      i1  => code(2),
      i2  => not_code(3),
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

aux9_ins : no2_x1
   port map (
      i0  => na3_x1_sig,
      i1  => not_dac_cs(1),
      nq  => aux9,
      vdd => vdd,
      vss => vss
   );

aux6_ins : no2_x1
   port map (
      i0  => code(3),
      i1  => code(2),
      nq  => aux6,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => not_code(1),
      i1  => not_code(3),
      i2  => code(2),
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

aux5_ins : a4_x2
   port map (
      i0  => dac_cs(1),
      i1  => no3_x1_sig,
      i2  => dac_cs(0),
      i3  => dac_cs(2),
      q   => aux5,
      vdd => vdd,
      vss => vss
   );

aux0_ins : na2_x1
   port map (
      i0  => code(3),
      i1  => not_daytime,
      nq  => aux0,
      vdd => vdd,
      vss => vss
   );

o2_x2_ins : o2_x2
   port map (
      i0  => not_aux11,
      i1  => not_aux5,
      q   => o2_x2_sig,
      vdd => vdd,
      vss => vss
   );

dac_cs_0_ins : sff1_x4
   port map (
      ck  => clk,
      i   => o2_x2_sig,
      q   => dac_cs(0),
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => code(1),
      i1  => aux6,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_ins : no2_x1
   port map (
      i0  => na2_x1_sig,
      i1  => dac_cs(1),
      nq  => no2_x1_sig,
      vdd => vdd,
      vss => vss
   );

nao22_x1_ins : nao22_x1
   port map (
      i0  => no2_x1_sig,
      i1  => aux9,
      i2  => not_dac_cs(2),
      nq  => nao22_x1_sig,
      vdd => vdd,
      vss => vss
   );

noa22_x1_ins : noa22_x1
   port map (
      i0  => nao22_x1_sig,
      i1  => not_aux5,
      i2  => not_aux11,
      nq  => noa22_x1_sig,
      vdd => vdd,
      vss => vss
   );

dac_cs_1_ins : sff1_x4
   port map (
      ck  => clk,
      i   => noa22_x1_sig,
      q   => dac_cs(1),
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => aux9,
      i1  => dac_cs(2),
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_3_ins : on12_x1
   port map (
      i0  => aux6,
      i1  => code(1),
      q   => on12_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_2_ins : on12_x1
   port map (
      i0  => not_dac_cs(0),
      i1  => on12_x1_3_sig,
      q   => on12_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_2_ins : na3_x1
   port map (
      i0  => not_aux5,
      i1  => on12_x1_2_sig,
      i2  => on12_x1_sig,
      nq  => na3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => na3_x1_2_sig,
      i1  => aux11,
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

dac_cs_2_ins : sff1_x4
   port map (
      ck  => clk,
      i   => a2_x2_sig,
      q   => dac_cs(2),
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => code(2),
      i1  => not_dac_cs(1),
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_3_ins : na2_x1
   port map (
      i0  => not_code(2),
      i1  => dac_cs(1),
      nq  => na2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_2_ins : no2_x1
   port map (
      i0  => code(3),
      i1  => not_code(1),
      nq  => no2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_ins : na4_x1
   port map (
      i0  => dac_cs(0),
      i1  => no2_x1_2_sig,
      i2  => na2_x1_3_sig,
      i3  => na2_x1_2_sig,
      nq  => na4_x1_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_2_ins : a2_x2
   port map (
      i0  => na4_x1_sig,
      i1  => not_dac_cs(2),
      q   => a2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_ins : xr2_x1
   port map (
      i0  => dac_cs(0),
      i1  => code(3),
      q   => xr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_4_ins : na2_x1
   port map (
      i0  => code(1),
      i1  => not_code(3),
      nq  => na2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_5_ins : na2_x1
   port map (
      i0  => code(3),
      i1  => not_code(1),
      nq  => na2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

a3_x2_ins : a3_x2
   port map (
      i0  => na2_x1_5_sig,
      i1  => not_code(2),
      i2  => na2_x1_4_sig,
      q   => a3_x2_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_4_ins : on12_x1
   port map (
      i0  => a3_x2_sig,
      i1  => not_dac_cs(1),
      q   => on12_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

ao22_x2_ins : ao22_x2
   port map (
      i0  => on12_x1_4_sig,
      i1  => xr2_x1_sig,
      i2  => dac_cs(2),
      q   => ao22_x2_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_6_ins : na2_x1
   port map (
      i0  => not_code(3),
      i1  => not_dac_cs(2),
      nq  => na2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_7_ins : na2_x1
   port map (
      i0  => not_code(3),
      i1  => dac_cs(1),
      nq  => na2_x1_7_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => aux0,
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_2_ins : no3_x1
   port map (
      i0  => code(1),
      i1  => inv_x2_sig,
      i2  => not_code(2),
      nq  => no3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_8_ins : na2_x1
   port map (
      i0  => not_code(3),
      i1  => not_dac_cs(0),
      nq  => na2_x1_8_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_2_ins : na4_x1
   port map (
      i0  => na2_x1_8_sig,
      i1  => no3_x1_2_sig,
      i2  => na2_x1_7_sig,
      i3  => na2_x1_6_sig,
      nq  => na4_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

alarm_ins : oa2ao222_x4
   port map (
      i0  => na4_x1_2_sig,
      i1  => aux10,
      i3  => ao22_x2_sig,
      i2  => a2_x2_2_sig,
      i4  => aux11,
      q   => alarm,
      vdd => vdd,
      vss => vss
   );

no4_x1_ins : no4_x1
   port map (
      i0  => not_code(3),
      i1  => not_daytime,
      i2  => not_code(2),
      i3  => code(1),
      nq  => no4_x1_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_3_ins : na3_x1
   port map (
      i0  => not_code(1),
      i1  => code(2),
      i2  => aux0,
      nq  => na3_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_3_ins : no3_x1
   port map (
      i0  => not_dac_cs(2),
      i1  => dac_cs(1),
      i2  => na3_x1_3_sig,
      nq  => no3_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

door_ins : ao22_x2
   port map (
      i0  => no3_x1_3_sig,
      i1  => no4_x1_sig,
      i2  => aux10,
      q   => door,
      vdd => vdd,
      vss => vss
   );


end structural;
