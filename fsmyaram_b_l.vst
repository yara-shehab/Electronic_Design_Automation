entity fsmyaram_b_l is
   port (
      clk     : in      bit;
      vdd     : in      bit;
      vss     : in      bit;
      code    : in      bit_vector(3 downto 0);
      daytime : in      bit;
      reset   : in      bit;
      door    : out     bit;
      alarm   : out     bit
 );
end fsmyaram_b_l;

architecture structural of fsmyaram_b_l is
Component xr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x4
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a4_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa22_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component ao22_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component an12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2a22_x2
   port (
      i1  : in      bit;
      i0  : in      bit;
      i3  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2ao222_x4
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      i4  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component noa22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal dac_cs             : bit_vector( 2 downto 0);
signal mbk_buf_dac_cs     : bit_vector( 0 downto 0);
signal mbk_buf_not_dac_cs : bit_vector( 0 downto 0);
signal not_code           : bit_vector( 2 downto 0);
signal not_dac_cs         : bit_vector( 2 downto 0);
signal on12_x1_sig        : bit;
signal oa2a22_x2_sig      : bit;
signal oa22_x2_sig        : bit;
signal o3_x2_sig          : bit;
signal not_aux8           : bit;
signal not_aux7           : bit;
signal not_aux3           : bit;
signal not_aux2           : bit;
signal not_aux15          : bit;
signal not_aux12          : bit;
signal not_aux10          : bit;
signal no3_x1_sig         : bit;
signal no3_x1_2_sig       : bit;
signal no2_x1_sig         : bit;
signal no2_x1_6_sig       : bit;
signal no2_x1_5_sig       : bit;
signal no2_x1_4_sig       : bit;
signal no2_x1_3_sig       : bit;
signal no2_x1_2_sig       : bit;
signal na3_x1_sig         : bit;
signal na3_x1_2_sig       : bit;
signal na2_x1_sig         : bit;
signal na2_x1_2_sig       : bit;
signal mbk_buf_not_aux8   : bit;
signal mbk_buf_not_aux10  : bit;
signal inv_x2_sig         : bit;
signal inv_x2_2_sig       : bit;
signal aux6               : bit;
signal aux12              : bit;
signal aux11              : bit;
signal ao22_x2_sig        : bit;
signal an12_x1_sig        : bit;
signal a2_x2_sig          : bit;
signal a2_x2_2_sig        : bit;

begin

not_aux7_ins : xr2_x1
   port map (
      i0  => dac_cs(1),
      i1  => code(3),
      q   => not_aux7,
      vdd => vdd,
      vss => vss
   );

no2_x1_ins : no2_x1
   port map (
      i0  => code(0),
      i1  => not_aux8,
      nq  => no2_x1_sig,
      vdd => vdd,
      vss => vss
   );

not_aux10_ins : na2_x1
   port map (
      i1  => no2_x1_sig,
      i0  => dac_cs(2),
      nq  => not_aux10,
      vdd => vdd,
      vss => vss
   );

not_aux8_ins : o2_x2
   port map (
      i0  => code(3),
      i1  => not_dac_cs(0),
      q   => not_aux8,
      vdd => vdd,
      vss => vss
   );

not_aux12_ins : inv_x2
   port map (
      i   => aux12,
      nq  => not_aux12,
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => not_code(0),
      i1  => code(3),
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

not_aux2_ins : o3_x2
   port map (
      i0  => on12_x1_sig,
      i1  => mbk_buf_dac_cs(0),
      i2  => not_dac_cs(2),
      q   => not_aux2,
      vdd => vdd,
      vss => vss
   );

no2_x1_2_ins : no2_x1
   port map (
      i0  => code(0),
      i1  => code(2),
      nq  => no2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => no2_x1_2_sig,
      i1  => aux11,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

not_aux15_ins : o2_x2
   port map (
      i0  => dac_cs(2),
      i1  => na2_x1_sig,
      q   => not_aux15,
      vdd => vdd,
      vss => vss
   );

not_dac_cs_2_ins : inv_x2
   port map (
      i   => dac_cs(2),
      nq  => not_dac_cs(2),
      vdd => vdd,
      vss => vss
   );

not_dac_cs_0_ins : inv_x4
   port map (
      i   => dac_cs(0),
      nq  => not_dac_cs(0),
      vdd => vdd,
      vss => vss
   );

not_aux3_ins : o2_x2
   port map (
      i0  => code(3),
      i1  => dac_cs(1),
      q   => not_aux3,
      vdd => vdd,
      vss => vss
   );

not_code_2_ins : inv_x2
   port map (
      i   => code(2),
      nq  => not_code(2),
      vdd => vdd,
      vss => vss
   );

not_code_0_ins : inv_x2
   port map (
      i   => code(0),
      nq  => not_code(0),
      vdd => vdd,
      vss => vss
   );

aux12_ins : no2_x1
   port map (
      i0  => code(1),
      i1  => reset,
      nq  => aux12,
      vdd => vdd,
      vss => vss
   );

aux11_ins : an12_x1
   port map (
      i0  => reset,
      i1  => code(1),
      q   => aux11,
      vdd => vdd,
      vss => vss
   );

aux6_ins : a4_x2
   port map (
      i0  => code(3),
      i1  => code(0),
      i2  => daytime,
      i3  => code(2),
      q   => aux6,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => not_aux12,
      i1  => not_aux2,
      i2  => code(2),
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_3_ins : no2_x1
   port map (
      i0  => not_aux3,
      i1  => not_aux15,
      nq  => no2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

oa22_x2_ins : oa22_x2
   port map (
      i0  => mbk_buf_not_dac_cs(0),
      i1  => no2_x1_3_sig,
      i2  => no3_x1_sig,
      q   => oa22_x2_sig,
      vdd => vdd,
      vss => vss
   );

dac_cs_0_ins : sff1_x4
   port map (
      ck  => clk,
      i   => oa22_x2_sig,
      q   => dac_cs(0),
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => aux11,
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_2_ins : no3_x1
   port map (
      i0  => inv_x2_sig,
      i1  => mbk_buf_not_aux10,
      i2  => not_code(2),
      nq  => no3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

dac_cs_1_ins : sff1_x4
   port map (
      ck  => clk,
      i   => no3_x1_2_sig,
      q   => dac_cs(1),
      vdd => vdd,
      vss => vss
   );

no2_x1_4_ins : no2_x1
   port map (
      i0  => not_aux15,
      i1  => not_aux7,
      nq  => no2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

ao22_x2_ins : ao22_x2
   port map (
      i0  => mbk_buf_not_dac_cs(0),
      i1  => dac_cs(1),
      i2  => no2_x1_4_sig,
      q   => ao22_x2_sig,
      vdd => vdd,
      vss => vss
   );

dac_cs_2_ins : sff1_x4
   port map (
      ck  => clk,
      i   => ao22_x2_sig,
      q   => dac_cs(2),
      vdd => vdd,
      vss => vss
   );

an12_x1_ins : an12_x1
   port map (
      i0  => aux6,
      i1  => aux12,
      q   => an12_x1_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => not_aux2,
      i1  => not_code(2),
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_5_ins : no2_x1
   port map (
      i0  => not_aux3,
      i1  => not_code(0),
      nq  => no2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => no2_x1_5_sig,
      i1  => mbk_buf_dac_cs(0),
      i2  => not_dac_cs(2),
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_2_ins : a2_x2
   port map (
      i0  => na3_x1_sig,
      i1  => code(2),
      q   => a2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_6_ins : no2_x1
   port map (
      i0  => code(0),
      i1  => not_aux7,
      nq  => no2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_2_ins : na3_x1
   port map (
      i0  => no2_x1_6_sig,
      i1  => mbk_buf_not_dac_cs(0),
      i2  => not_dac_cs(2),
      nq  => na3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

oa2a22_x2_ins : oa2a22_x2
   port map (
      i1  => not_code(2),
      i0  => na3_x1_2_sig,
      i3  => not_aux10,
      i2  => code(2),
      q   => oa2a22_x2_sig,
      vdd => vdd,
      vss => vss
   );

alarm_ins : oa2ao222_x4
   port map (
      i0  => oa2a22_x2_sig,
      i1  => aux11,
      i2  => a2_x2_2_sig,
      i3  => a2_x2_sig,
      i4  => an12_x1_sig,
      q   => alarm,
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => aux6,
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => code(0),
      i1  => code(2),
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

o3_x2_ins : o3_x2
   port map (
      i0  => na2_x1_2_sig,
      i1  => mbk_buf_not_aux8,
      i2  => dac_cs(2),
      q   => o3_x2_sig,
      vdd => vdd,
      vss => vss
   );

door_ins : noa22_x1
   port map (
      i0  => o3_x2_sig,
      i1  => inv_x2_2_sig,
      i2  => not_aux12,
      nq  => door,
      vdd => vdd,
      vss => vss
   );

mbk_buf_not_dac_cs_0 : buf_x2
   port map (
      i   => not_dac_cs(0),
      q   => mbk_buf_not_dac_cs(0),
      vdd => vdd,
      vss => vss
   );

mbk_buf_dac_cs_0 : buf_x2
   port map (
      i   => dac_cs(0),
      q   => mbk_buf_dac_cs(0),
      vdd => vdd,
      vss => vss
   );

mbk_buf_not_aux8 : buf_x2
   port map (
      i   => not_aux8,
      q   => mbk_buf_not_aux8,
      vdd => vdd,
      vss => vss
   );

mbk_buf_not_aux10 : buf_x2
   port map (
      i   => not_aux10,
      q   => mbk_buf_not_aux10,
      vdd => vdd,
      vss => vss
   );


end structural;
